<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-2.5.xsd">


    <context:component-scan base-package="com.control">
	</context:component-scan>
	
		<!-- mapper的批量扫描，从mapper包中扫描mapper接口，自动创建代理对象，注入到spring容器 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
          
        <!-- 通过这里配置对mapper接口的扫描，mybatis全局配置文件里对mapper的扫描就不需要配置了 。  
        对mapper接口的扫描和代理对象的生成都由spring来管理了  
        -->  
        <property name="basePackage" value="mapper"/>  
          
        <!-- 这里name使用sqlSessionFactoryBeanName而不使用sqlSessionFactory，  
        原因是MapperScannerConfigurer这个配置会先加载，如果使用sqlSessionFactory，那么数据源还没开始加载，  
        MapperScannerConfigurer的加载就开始了，这会导致找不到数据源。所以需要使用sqlSessionFactoryBeanName  
         -->  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>  
    </bean>  
    
	
</beans>